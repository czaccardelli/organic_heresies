namespace = heresiarch

# a new heresiarch appears
heresiarch.0001 = {
    type = character_event
    title = heresiarch.0001.t
    desc = heresiarch.0001.desc

    theme = faith

    left_portrait = {
        character = scope:heresiarch
        animation = personality_bold
    }
    override_background = { event_background = alley_day }


    immediate = {
        scope:heresiarch.var:stronghold = { save_scope_as = stronghold }
        show_as_tooltip = {
            scope:stronghold.county = {
                set_county_faith = scope:heresiarch.faith
                add_county_modifier = { modifier = heretic_stronghold_modifier }
            }
        }
    }

    option = {
        name = heresiarch.0001.a

        ai_chance = {
            base = 100
        }
    }
}

# notify relevant characters about heresiarch's death
heresiarch.0002 = {
    hidden = yes
    scope = character

    immediate = {
        save_scope_as = dead_heresiarch
        scope:dead_heresiarch.var:stronghold.county = { save_scope_as = stronghold }
        scope:dead_heresiarch.faith = { save_scope_as = heresiarch_faith }
        every_player = {
                trigger_event = heresiarch.0003
        }
    }
}

# the heresiarch dies
heresiarch.0003 = {
    type = character_event
    title = heresiarch.0002.t
    desc = heresiarch.0002.desc

    theme = death

    left_portrait = {
        character = scope:dead_heresiarch
    }
    override_background = { event_background = alley_night }

    immediate = {
        show_as_tooltip = {
            scope:stronghold.county = {
                remove_county_modifier = heretic_stronghold_modifier
            }
        }
    }

    option = {
        name = heresiarch.0002.a

        ai_chance = {
            base = 100
        }
    }
}

# heresiarch and county lose stronghold and try to re-establish it
heresiarch.1000 = {
    hidden = yes
    scope = landed_title

    trigger = {
        tier = tier_county
    }

    immediate = {
        save_scope_as = stronghold_county
        if = {
            limit = { has_county_modifier = heretic_stronghold_modifier }
            remove_county_modifier = heretic_stronghold_modifier
        }
        every_county_province = {
            save_temporary_scope_as = temp_province
            every_pool_character = {
                province = scope:temp_province
                limit = {
                    has_trait = heresiarch
                    faith = scope:old_faith
                    location = scope:temp_province
                    AND = {
                        has_variable = stronghold
                        var:stronghold.county = scope:stronghold_county
                    }
                }
                remove_variable = stronghold
                trigger_event = {
                    id = heresiarch.1001
                    days = { 1 3 }
                }
            }
        }
    }
}

# heresiarch surfaces to try and re-establish stronghold
heresiarch.1001 = {
    hidden = yes
    scope = character

    trigger = {
        NOT = {
            has_variable = stronghold
        }
    }

    immediate = {
        # DEBUG
        every_player = {
            send_interface_message = {
                type = event_generic_neutral
                title = heretic_stronghold_modifier
            }
        }
        # DEBUG
    }
}

# trigger a move for every heresiarch of the new faith in the county (should generally only be one, but you never know)
heresiarch.2000 = {
    scope = landed_title
    hidden = yes

    trigger = {
        tier = tier_county
    }

    immediate = {
        every_county_province = {
            save_temporary_scope_as = temp_province
            every_pool_character = {
                province = scope:temp_province
                limit = {
                    has_trait = heresiarch
                    faith = root.faith
                    location = scope:temp_province
                }
                this = {
                    save_scope_as = moving_heresiarch
                    trigger_event = {
                        id = heresiarch.2001
                        days = { 3 5 }
                    }
                }
            }
        }
    }
}

# moves a heresiarch to a random new valid province
heresiarch.2001 = {
    hidden = yes

    immediate = {
        save_scope_as = moving_heresiarch
        move_heresiarch_effect = { HERESIARCH = scope:moving_heresiarch }
        heresiarch_begin_converting_county_effect = { HERESIARCH = scope:moving_heresiarch }
        # DEBUG
        every_player = {
            send_interface_message = {
                type = event_generic_neutral
                title = heretic_stronghold_modifier
                right_icon = scope:moving_heresiarch
                show_as_tooltip = {
                    move_heresiarch_effect = { HERESIARCH = scope:moving_heresiarch }
                }
            } 
        }
        # DEBUG
    }
}

# heresiarch converts a province
heresiarch.3000 = {
    hidden = yes
    scope = character
    trigger = {
        has_trait = heresiarch
    }

    immediate = {
        scope:heresiarch.location.county = { save_scope_as = heretic_county }
        scope:heresiarch.faith = { save_scope_as = heresy }
        scope:heretic_county = { set_county_faith = scope:heresy }
        every_player = {
#        limit = {
#            OR = {
#                # notify everyone whose top liege is also the top liege of the converted county's holder (aka in the same independent realm)
#                AND = {
#                exists = scope:heretic_county.holder.top_liege
#                top_liege = scope:heretic_county.holder.top_liege
#                }
#                # notify everyone near the converted county
#                AND = {
#                exists = capital_county
#                    capital_county = {
#                         squared_distance = {
#                            target = this
#                            value < squared_distance_medium
#                       }	
#                    }
#                }
#            }
#        }
            this = {
                save_scope_as = current_player
                faith = {
                    save_scope_as = player_faith
                }
            }
            # send a good message if the heresy is player's faith
            if = {
                limit = {
                    scope:player_faith = scope:heresy
                }
                send_interface_message = {
                    type = event_heretic_stronghold_good
                    title = HERETICS_SPAWNED
                    desc = HERETICS_SPAWNED_DESC
                    show_as_tooltip = {
                        scope:heretic_county = { set_county_faith = scope:heresy }
                    }
                }
            }
            # send a bad message if the heresy is not the player's faith and they consider it hostile or evil
            else_if = {
                limit = {
                    NOT = { scope:player_faith = scope:heresy }
                    scope:player_faith = {
                        faith_hostility_level = {
                            target = scope:heresy
                            value >= 2
                        }
                    }
                }
                send_interface_message = {
                    type = event_heretic_stronghold_bad
                    title = HERETICS_SPAWNED
                    desc = HERETICS_SPAWNED_DESC
                    show_as_tooltip = {
                        scope:heretic_county = { set_county_faith = scope:heresy }
                    }
                }
            }
            # send a neutral message if the heresy is astray
            else_if = {
                limit = {
                    NOT = { scope:player_faith = scope:heresy }
                    scope:player_faith = {
                        faith_hostility_level = {
                            target = scope:heresy
                            value = 1
                        }
                    }
                }
                send_interface_message = {
                    type = event_heretic_stronghold_neutral
                    title = HERETICS_SPAWNED
                    desc = HERETICS_SPAWNED_DESC
                    show_as_tooltip = {
                        scope:heretic_county = { set_county_faith = scope:heresy }
                    }
                }
            }
        }
    }
}