move_heresiarch_effect = {
    $HERESIARCH$ = { save_scope_as = moving_heresiarch }
    random_county = {
        limit = {
            # don't move to provinces that are already owned by the heretics
            NOT = { faith = scope:moving_heresiarch.faith }
            squared_distance = {
                target = scope:moving_heresiarch.location
                value < squared_distance_medium
            }
            # make sure the county has heretic neighbors to stop 'islands' from forming and to maintain a good spread pattern
            any_neighboring_county = { faith = scope:moving_heresiarch.faith }
            # don't move to holy sites belonging to their proper religion
            any_in_de_jure_hierarchy = {
                tier = tier_barony
                continue = { tier > tier_barony }
                NOT = { is_holy_site_of = scope:old_faith }
            }
        }
        weight = {
            base = 100
            # counties with a faith with low fervor are more susceptible
            modifier = {
                add = {
                    value = faith.fervor
                    multiply = -1
                }
            }
            # low-control counties are more susceptible to heresy
            modifier = {
                factor = 2
                county_control < 50
            }
            modifier = {
                factor = 2
                county_control < 10
            }
            # counties with the same religion are much more susceptible
            modifier = {
                factor = 3
                faith.religion = scope:moving_heresiarch.faith.religion
            }
            modifier = {
                factor = {
                    # counties held by sinful rulers are more susceptible
                    add = holder.sinfulness_multiplier
                    # counties with sinful court chaplains are more susceptible
                    add = holder.cp:councillor_court_chaplain.sinfulness_multiplier
                }
            }
        }
        save_scope_as = destination
    }
}